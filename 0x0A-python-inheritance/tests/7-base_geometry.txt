>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 85)
>>> bg.integer_validator("width", 99)

#check for value is string 
>>> try:
...    bg.integer_validator("name", "Hajar")
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer


#check for value is float
>>> try:
...    bg.integer_validator("name", 0.7)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

#check for value == 0
>>> try:
...    bg.integer_validator("age", 0)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0

#check for value is negative
>>> try:
...    bg.integer_validator("distance", -2)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0

>>> try:
...    bg.integer_validator("name", False)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> try:
...    bg.integer_validator("name", (1, 2))
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> try:
...    bg.integer_validator("name", [1, 2])
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> try:
...    bg.integer_validator("name", None)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> try:
...    bg.integer_validator("name", {1, 2})
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> try:
...    bg.integer_validator("name", 1e350)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> bg.integer_validator(None)
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


